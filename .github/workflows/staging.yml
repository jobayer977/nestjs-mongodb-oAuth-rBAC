name: Staging Deployment

on:
  push:
    branches:
      - staging

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Genarate .env and .crt for db
        run: |
          envsubst "`printf '${%s} ' $(sh -c "env|cut -d'=' -f1")`" < ./environments/example.env > ./environments/$NODE_ENV.env
          echo "$(cat ./environments/$NODE_ENV.env)"
        env:
          PORT: ${{ secrets.PORT }}
          APP_URL: ${{ secrets.APP_URL }}
          APP_ENV: ${{ secrets.APP_ENV }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          TZ: ${{ secrets.TZ }}

          API_PREFIX: ${{ secrets.API_PREFIX }}
          API_TITLE: ${{ secrets.API_TITLE }}
          API_DESC: ${{ secrets.API_DESC }}
          API_VERSION: ${{ secrets.API_VERSION }}

          # DB
          MONGO_URI: ${{ secrets.MONGO_URI }}

          # JWT_SECRET
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SALT_ROUNDS: ${{ secrets.SALT_ROUNDS }}
          EXPIRES_IN: ${{ secrets.EXPIRES_IN }}
          REFRESH_TOKEN_EXPIRES_IN: ${{ secrets.REFRESH_TOKEN_EXPIRES_IN }}
          RESET_PASSWORD_EXPIRES_IN: ${{ secrets.RESET_PASSWORD_EXPIRES_IN }}
          OTP_EXPIRES_IN: ${{ secrets.OTP_EXPIRES_IN }}
          OTP_EXPIRE_TIME_IN_MINUTES: ${{ secrets.OTP_EXPIRE_TIME_IN_MINUTES }}
          OTP_LENGTH: ${{ secrets.OTP_LENGTH }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          OAUTH_REDIRECT_URL: ${{ secrets.OAUTH_REDIRECT_URL }}

          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
          FACEBOOK_CLIENT_SECRET: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
          FACEBOOK_CALLBACK_URL: ${{ secrets.FACEBOOK_CALLBACK_URL }}

          # Digital Ocean Spaces
          DO_SPACES_ENDPOINT: ${{ secrets.DO_SPACES_ENDPOINT }}
          DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
          DO_SECRETS: ${{ secrets.DO_SECRETS }}

          API_ORIGIN: ${{ secrets.API_ORIGIN }}
          FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}

          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

      - name: Logging to docker
        run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Build the docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/auth-service-staging:latest

      - name: Build the docker image with specific tag
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/auth-service-staging:sha-${{ github.sha }}

      - name: Docker Push
        run: docker push ${{secrets.DOCKER_USER}}/auth-service-staging:latest

      - name: Docker Push with specific tag
        run: docker push ${{secrets.DOCKER_USER}}/auth-service-staging:sha-${{ github.sha }}

  Deploy:
    needs: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Logging to docker
        run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Deploy To Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "Logging to docker hub"
            docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}} 

            echo "Stopping previous build"
            docker stop auth-service-staging

            echo "Removing previous build"
            docker rm auth-service-staging

            echo "Removing old image from local"
            docker rmi ${{secrets.DOCKER_USER}}/auth-service-staging:latest

            echo "Pulling latest image from docker hub"
            docker pull ${{secrets.DOCKER_USER}}/auth-service-staging:latest

  Run:
    needs: Deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Logging to docker
        run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Deploy To Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "Logging to docker hub"
            docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}

            echo "Starting latest build"

            docker run -e NODE_ENV=staging -d \
              --restart always \
              -p 9100:4000 \
              --name auth-service-staging \
              ${{secrets.DOCKER_USER}}/auth-service-staging:latest

            echo "Deploy Done"
